# -*- coding: utf-8 -*-
"""AllFederation_EquipmentTrends_and_EquipmentBreakdowns

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bGBkemT3SHf6fdzL8JhlPUlR3RdQDHuz

# **All Federations Equipment Breakdown since 2015 (Pie Chart)**

***Please note that all of these graphs used the raw data set, as the Final Cleaned data set is specific to "Raw" USAPL Entries only***
"""

import pandas as pd
import matplotlib.pyplot as plt


csv_file = 'OpenPowerliftingRawDataAugust2023.csv'
df = pd.read_csv(csv_file)


df['Date'] = pd.to_datetime(df['Date'])
df_filtered = df[df['Date'].dt.year >= 2015]

# Filter the DataFrame for rows with 'Equipment' values = 'Raw' or 'Wraps'
df_filtered_equipment = df_filtered[df_filtered['Equipment'].isin(['Raw', 'Wraps'])]


equipment_counts = df_filtered_equipment['Equipment'].value_counts()


equipped_count = len(df_filtered) - equipment_counts.sum()


equipment_counts['Equipped'] = equipped_count

plt.figure(figsize=(8, 8))
plt.pie(equipment_counts, labels=equipment_counts.index, autopct='%1.1f%%', startangle=90, colors = ['red', 'gray', 'blue'])
plt.rcParams['font.size'] = 16


plt.title('All Feds Equipment Breakdown (2015-2023)', fontsize=20)

plt.axis('equal')
plt.show()

"""# **Pie Chart Equipment Breakdown (2023 Only)**"""

csv_file = 'OpenPowerliftingRawDataAugust2023.csv'
df = pd.read_csv(csv_file)


df['Date'] = pd.to_datetime(df['Date'])
df_filtered = df[df['Date'].dt.year >= 2023]

# Filter the DataFrame for rows with 'Equipment' values = 'Raw' or 'Wraps'
df_filtered_equipment = df_filtered[df_filtered['Equipment'].isin(['Raw', 'Wraps'])]


equipment_counts = df_filtered_equipment['Equipment'].value_counts()


equipped_count = len(df_filtered) - equipment_counts.sum()


equipment_counts['Equipped'] = equipped_count

plt.figure(figsize=(8, 8))
plt.pie(equipment_counts, labels=equipment_counts.index, autopct='%1.1f%%', startangle=90, colors = ['red', 'gray', 'blue'])
plt.rcParams['font.size'] = 16


plt.title('All Feds Equipment Breakdown (2023 Only)', fontsize=20)

plt.axis('equal')
plt.show()

"""# **All Federation Equipment Trends since 2015**"""

import pandas as pd
import matplotlib.pyplot as plt


csv_file = 'OpenPowerliftingRawDataAugust2023.csv'
df = pd.read_csv(csv_file)
df['Date'] = pd.to_datetime(df['Date'])
df_filtered = df[df['Date'].dt.year >= 2015]

# Filter the DataFrame for rows with 'Equipment' values = 'Raw' or 'Wraps'
df_filtered_equipment = df_filtered[df_filtered['Equipment'].isin(['Raw', 'Wraps'])]

# Calculate the counts for different equipment types
equipment_counts = df_filtered_equipment['Equipment'].value_counts()
equipped_count = len(df_filtered) - equipment_counts.sum()
equipment_counts['Equipped'] = equipped_count

# Create a line graph to show trends over the years
years = range(2015, 2024)  # Years from 2015 to 2023
raw_counts = []
wrap_counts = []
other_counts = []

for year in years:
    year_data = df_filtered[df_filtered['Date'].dt.year == year]
    raw_counts.append(len(year_data[year_data['Equipment'] == 'Raw']))
    wrap_counts.append(len(year_data[year_data['Equipment'] == 'Wraps']))
    other_counts.append(len(year_data) - (raw_counts[-1] + wrap_counts[-1]))

plt.figure(figsize=(10, 6))
plt.plot(years, raw_counts, label='Raw', color='red')
plt.plot(years, wrap_counts, label='Wraps', color='gray')
plt.plot(years, other_counts, label='Equipped', color='blue')
plt.xlabel('Year', fontsize=16)
plt.ylabel('Counts', fontsize=16)
plt.title('Equipment Trends (All Federations 2015-2023)', fontsize=20)
plt.legend(fontsize=14)
plt.grid(True)
plt.xticks(fontsize=16)
plt.yticks(fontsize=16)
plt.show()